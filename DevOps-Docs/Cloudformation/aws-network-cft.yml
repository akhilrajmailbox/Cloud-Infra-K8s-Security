# Usage:
# aws cloudformation --region <region> create-stack --stack-name <stack name> --template-body file://file.yml
# This template will:
#   Create a VPC with:
#       3 Public Subnets
#       3 Private Subnets
#       3 backend Subnets
#       3 reserved Subnets
#   An Internet Gateway (with routes to it for Public Subnets)
#   3 NAT Gateway for outbound access (with routes from Private Subnets set to use it)
#   A Bastion Host in public subnet which can be used to communicate with private subnets
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This CFT deploy Network for High Available Applications. 
  Last Modified: July 2022
  Author: Akhil Raj
Parameters:
  CidrStart:
    Description: 'Enter starting 2 blocks of CIDR for the VPC Network (EG: 10.0)'
    Type: String
    MinLength: '3'
    MaxLength: '7'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x
  BastionInstanceType:
    Description: 'EC2 instance type for Bastion Host'
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
    ConstraintDescription: Must be a valid EC2 instance type
  BastionLimitedSSHAccess:
    Description: 'Enter the source network CIDR that may access via SSH to Bastion Instance'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  BastionKeyName:
    Description: 'Enter name of an existing EC2 KeyPair to enable SSH access to the Bastion Instance'
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Name of an existing EC2 KeyPair


Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-08df646e18b182346'
    'us-east-2':
      AMI: 'ami-02d1e544b84bf7502'
    'ca-central-1':
      AMI: 'ami-00f881f027a6d74a0'


Resources:
  ProjectVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".0.0/16"
      Tags: 
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-vpc"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: ProjectVPC
    Properties:
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-igw"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"
        - Key: Network
          Value: Public

  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn:
      - ProjectVPC
      - InternetGateway
    Properties:
      VpcId:
        Ref: ProjectVPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "a"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".0.0/20"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-publicsubnet1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "b"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".16.0/20"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-publicsubnet2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "d"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".32.0/20"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-publicsubnet3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "a"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".48.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatesubnet1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "b"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".64.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatesubnet2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "d"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".80.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatesubnet3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BackendSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "a"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".96.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Backendsubnet1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BackendSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "b"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".112.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Backendsubnet2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BackendSubnet3:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "d"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".128.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Backendsubnet3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  ReservedSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "a"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".144.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Reservedsubnet1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  ReservedSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "b"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".160.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Reservedsubnet2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  ReservedSubnet3:
    Type: 'AWS::EC2::Subnet'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      AvailabilityZone:
        Fn::Join:
          - ""
          - - Ref: "AWS::Region"
            - "d"
      CidrBlock:
        Fn::Join:
          - ""
          - - Ref: "CidrStart"
            - ".176.0/20"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-Reservedsubnet3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  NatPublicIP1:
    Type: "AWS::EC2::EIP"
    DependsOn: GatewayToInternet
    Properties:
      Domain: vpc

  NatPublicIP2:
    Type: "AWS::EC2::EIP"
    DependsOn: GatewayToInternet
    Properties:
      Domain: vpc

  NatPublicIP3:
    Type: "AWS::EC2::EIP"
    DependsOn: GatewayToInternet
    Properties:
      Domain: vpc

  NatGateway1:
    Type: "AWS::EC2::NatGateway"
    DependsOn: NatPublicIP1
    Properties: 
      AllocationId:
        Fn::GetAtt: NatPublicIP1.AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-natgw1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  NatGateway2:
    Type: "AWS::EC2::NatGateway"
    DependsOn: NatPublicIP2
    Properties: 
      AllocationId:
        Fn::GetAtt: NatPublicIP2.AllocationId
      SubnetId:
        Ref: PublicSubnet2
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-natgw2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  NatGateway3:
    Type: "AWS::EC2::NatGateway"
    DependsOn: NatPublicIP3
    Properties: 
      AllocationId:
        Fn::GetAtt: NatPublicIP3.AllocationId
      SubnetId:
        Ref: PublicSubnet3
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-natgw3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatert1"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatert2"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateRouteTable3:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-privatert3"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-publicrt"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  PrivateRoute1:
    Type: 'AWS::EC2::Route'
    DependsOn: NatGateway1
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway1

  PrivateRoute2:
    Type: 'AWS::EC2::Route'
    DependsOn: NatGateway2
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway2

  PrivateRoute3:
    Type: 'AWS::EC2::Route'
    DependsOn: NatGateway3
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway3

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateSubnet1
      - PrivateRouteTable1
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateSubnet2
      - PrivateRouteTable2
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2

  PrivateSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateSubnet3
      - PrivateRouteTable3
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: PrivateRouteTable3

  BackendSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - BackendSubnet1
      - PrivateRouteTable1
    Properties:
      SubnetId:
        Ref: BackendSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1

  BackendSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - BackendSubnet2
      - PrivateRouteTable2
    Properties:
      SubnetId:
        Ref: BackendSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2

  BackendSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - BackendSubnet3
      - PrivateRouteTable3
    Properties:
      SubnetId:
        Ref: BackendSubnet3
      RouteTableId:
        Ref: PrivateRouteTable3

  ReservedSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - ReservedSubnet1
      - PrivateRouteTable1
    Properties:
      SubnetId:
        Ref: ReservedSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1

  ReservedSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - ReservedSubnet2
      - PrivateRouteTable2
    Properties:
      SubnetId:
        Ref: ReservedSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2

  ReservedSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - ReservedSubnet3
      - PrivateRouteTable3
    Properties:
      SubnetId:
        Ref: ReservedSubnet3
      RouteTableId:
        Ref: PrivateRouteTable3

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicSubnet1
      - PublicRouteTable
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicSubnet2
      - PublicRouteTable
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicSubnet3
      - PublicRouteTable
    Properties:
      SubnetId:
        Ref: PublicSubnet3
      RouteTableId:
        Ref: PublicRouteTable

  BastionHostSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: bastionhost-sg
      GroupName: bastionhost-sg
      VpcId:
        Ref: ProjectVPC
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-bastionhost-sg"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BastionHostSGIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: BastionHostSG
    Properties:
      Description: String
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp:
        Ref: BastionLimitedSSHAccess
      GroupId:
        Fn::GetAtt:
          - 'BastionHostSG'
          - 'GroupId'

  BastionHostSGEgressAll:
    Type: 'AWS::EC2::SecurityGroupEgress'
    DependsOn: BastionHostSG
    Properties:
      Description: outgoing-access
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
      GroupId:
        Fn::GetAtt:
          - 'BastionHostSG'
          - 'GroupId'

  BastionHostNetworkInterface:
    Type: AWS::EC2::NetworkInterface
    DependsOn: BastionHostSG
    Properties:
      Description: "eth0"
      SourceDestCheck: false
      GroupSet: 
        - !Ref BastionHostSG
      SubnetId: !Ref PublicSubnet1
      Tags: 
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - !Ref "AWS::StackName"
                - "-bastionhost"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BastionHostElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: BastionHostNetworkInterface
    Properties:
      Domain: vpc
      Tags: 
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - !Ref "AWS::StackName"
                - "-bastionhost-eip"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"

  BastionHostElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn: BastionHostElasticIP
    Properties:
      AllocationId:
        !GetAtt BastionHostElasticIP.AllocationId
      NetworkInterfaceId:
        !Ref BastionHostNetworkInterface

  BastionHostInstance:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionHostSG
      - PublicSubnet1
    Properties:
      ImageId:
        Fn::FindInMap: 
          - "RegionMap"
          - Ref: "AWS::Region"
          - "AMI"
      InstanceType:
        Ref: "BastionInstanceType"
      KeyName:
        Ref: "BastionKeyName"
      Monitoring: true
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 50
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref BastionHostNetworkInterface
          DeviceIndex: 0
      Tags: 
        - Key: "Name"
          Value:
            Fn::Join:
              - ""
              - - Ref: "AWS::StackName"
                - "-bastionhost"
        - Key: "Environment"
          Value:
            Fn::Join:
              - ""
              - - "CFT-"
                - !Ref "AWS::StackName"


Outputs:
  Author:
    Description: CFT Author
    Value: Akhil Raj
  VPCName:
    Description: VPC Name
    Value: !Ref ProjectVPC
  BastionHostSG:
    Description: BastionHost Security Group
    Value: !Ref BastionHostSG
  BastionHostID:
    Description: Instance ID of BastionHost VM
    Value: !Ref BastionHostInstance
  BastionHostPublicIp:
    Description: Public IP of BastionHost VM
    Value: !Ref BastionHostElasticIP
  BastionHostPrivateIp:
    Description: Private IP of BastionHost VM
    Value: !GetAtt BastionHostNetworkInterface.PrimaryPrivateIpAddress
  BastionHostSubnet:
    Description: Subnet of BastionHost VM
    Value: !Ref PublicSubnet1
  PublicSubnet1ID:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
  PublicSubnet1Zone:
    Description: Public Subnet 1 Availability Zone
    Value: !GetAtt PublicSubnet1.AvailabilityZone
  PublicSubnet2ID:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
  PublicSubnet2Zone:
    Description: Public Subnet 2 Availability Zone
    Value: !GetAtt PublicSubnet2.AvailabilityZone
  PublicSubnet3ID:
    Description: Public Subnet 3 ID
    Value: !Ref PublicSubnet3
  PublicSubnet3Zone:
    Description: Public Subnet 3 Availability Zone
    Value: !GetAtt PublicSubnet3.AvailabilityZone
  PrivateSubnet1ID:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
  PrivateSubnet1Zone:
    Description: Private Subnet 1 Availability Zone
    Value: !GetAtt PrivateSubnet1.AvailabilityZone
  PrivateSubnet2ID:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
  PrivateSubnet2Zone:
    Description: Private Subnet 2 Availability Zone
    Value: !GetAtt PrivateSubnet2.AvailabilityZone
  PrivateSubnet3ID:
    Description: Private Subnet 3 ID
    Value: !Ref PrivateSubnet3
  PrivateSubnet3Zone:
    Description: Private Subnet 3 Availability Zone
    Value: !GetAtt PrivateSubnet3.AvailabilityZone
  BackendSubnet1ID:
    Description: Backend Subnet 1 ID
    Value: !Ref BackendSubnet1
  BackendSubnet1Zone:
    Description: Backend Subnet 1 Availability Zone
    Value: !GetAtt BackendSubnet1.AvailabilityZone
  BackendSubnet2ID:
    Description: Backend Subnet 2 ID
    Value: !Ref BackendSubnet2
  BackendSubnet2Zone:
    Description: Backend Subnet 2 Availability Zone
    Value: !GetAtt BackendSubnet2.AvailabilityZone
  BackendSubnet3ID:
    Description: Backend Subnet 3 ID
    Value: !Ref BackendSubnet3
  BackendSubnet3Zone:
    Description: Backend Subnet 3 Availability Zone
    Value: !GetAtt BackendSubnet3.AvailabilityZone
  ReservedSubnet1ID:
    Description: Reserved Subnet 1 ID
    Value: !Ref ReservedSubnet1
  ReservedSubnet1Zone:
    Description: Reserved Subnet 1 Availability Zone
    Value: !GetAtt ReservedSubnet1.AvailabilityZone
  ReservedSubnet2ID:
    Description: Reserved Subnet 2 ID
    Value: !Ref ReservedSubnet2
  ReservedSubnet2Zone:
    Description: Reserved Subnet 2 Availability Zone
    Value: !GetAtt ReservedSubnet2.AvailabilityZone
  ReservedSubnet3ID:
    Description: Reserved Subnet 3 ID
    Value: !Ref ReservedSubnet3
  ReservedSubnet3Zone:
    Description: Reserved Subnet 3 Availability Zone
    Value: !GetAtt ReservedSubnet3.AvailabilityZone
  InternetGateway:
    Description: Internet Gateway Name
    Value: !Ref InternetGateway
  NatPublicIP1:
    Description: NAT PublicIP 1
    Value: !Ref NatPublicIP1
  NatPublicIP2:
    Description: NAT PublicIP 2
    Value: !Ref NatPublicIP2
  NatPublicIP3:
    Description: NAT PublicIP 3
    Value: !Ref NatPublicIP3
  NatGateway1:
    Description: NAT Gateway 1
    Value: !Ref NatGateway1
  NatGateway2:
    Description: NAT Gateway 2
    Value: !Ref NatGateway2
  NatGateway3:
    Description: NAT Gateway 3
    Value: !Ref NatGateway3
  PrivateRouteTable1:
    Description: Private Route Table 1
    Value: !Ref PrivateRouteTable1
  PrivateRouteTable2:
    Description: Private Route Table 2
    Value: !Ref PrivateRouteTable2
  PrivateRouteTable3:
    Description: Private Route Table 3
    Value: !Ref PrivateRouteTable3
  PublicRouteTable:
    Description: Public Route Table
    Value: !Ref PublicRouteTable
